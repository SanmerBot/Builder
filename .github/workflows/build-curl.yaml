name: Build cURL

on:
  workflow_dispatch:
    inputs:
      android_ndk_version:
        description: "Android NDK Version"
        required: true
        default: "28.2.13676358"
      android_sdk_version:
        description: "Android SDK Version"
        required: true
        default: "30"
      openssl_version:
        description: "OpenSSL Version"
        required: true
        default: "3.5.2"
      brotli_version:
        description: "Brotli Version"
        required: true
        default: "1.1.0"
      zstd_version:
        description: "Zstd Version"
        required: true
        default: "1.5.7"
      libssh2_version:
        description: "LibSSH2 Version"
        required: true
        default: "1.11.1"
      nghttp2_version:
        description: "NgHTTP2 Version"
        required: true
        default: "1.67.1"
      nghttp3_version:
        description: "NgHTTP3 Version"
        required: true
        default: "1.11.0"
      ngtcp2_version:
        description: "NgTCP2 Version"
        required: true
        default: "1.15.1"
      curl_version:
        description: "cURL Version"
        required: true
        default: "8.16.0"

jobs:
  build:
    name: Build cURL for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [arm64-v8a, x86_64]
        include:
          - target: arm64-v8a
            platform: android-arm64
          - target: x86_64
            platform: android-x86_64
    steps:        
      - name: Parse Tags
        run: |
          curl_version="${{ inputs.curl_version }}"
          curl_tag="curl-${curl_version//./_}"
          echo "CURL_TAG=$curl_tag" >> $GITHUB_ENV
          
      - name: Checkout OpenSSL - ${{ inputs.openssl_version }}
        uses: actions/checkout@v5
        with:
          repository: openssl/openssl
          ref: openssl-${{ inputs.openssl_version }}
          path: openssl

      - name: Checkout Brotli - ${{ inputs.brotli_version }}
        uses: actions/checkout@v5
        with:
          repository: google/brotli
          ref: v${{ inputs.brotli_version }}
          path: brotli

      - name: Checkout Zstd - ${{ inputs.zstd_version }}
        uses: actions/checkout@v5
        with:
          repository: facebook/zstd
          ref: v${{ inputs.zstd_version }}
          path: zstd

      - name: Checkout LibSSH2 - ${{ inputs.libssh2_version }}
        uses: actions/checkout@v5
        with:
          repository: libssh2/libssh2
          ref: libssh2-${{ inputs.libssh2_version }}
          path: libssh2

      - name: Checkout NgHTTP2 - ${{ inputs.nghttp2_version }}
        uses: actions/checkout@v5
        with:
          repository: nghttp2/nghttp2
          ref: v${{ inputs.nghttp2_version }}
          path: nghttp2

      - name: Checkout NgHTTP3 - ${{ inputs.nghttp3_version }}
        uses: actions/checkout@v5
        with:
          repository: ngtcp2/nghttp3
          ref: v${{ inputs.nghttp3_version }}
          path: nghttp3
          submodules: true

      - name: Checkout NgTCP2 - ${{ inputs.ngtcp2_version }}
        uses: actions/checkout@v5
        with:
          repository: ngtcp2/ngtcp2
          ref: v${{ inputs.ngtcp2_version }}
          path: ngtcp2
          submodules: true

      - name: Checkout cURL - ${{ inputs.curl_version }}
        uses: actions/checkout@v5
        with:
          repository: curl/curl
          ref: ${{ env.CURL_TAG }}
          path: curl

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ""

      - name: Set up Android NDK
        run: |
          sdkmanager --install "ndk;${{ inputs.android_ndk_version }}"
          ANDROID_NDK_ROOT="${ANDROID_SDK_ROOT}/ndk/${{ inputs.android_ndk_version }}"
          ANDROID_NDK_BUILD=`ls ${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/`
          ANDROID_NDK_BIN="${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/${ANDROID_NDK_BUILD}/bin"
          echo "ANDROID_NDK_ROOT=${ANDROID_NDK_ROOT}" >> $GITHUB_ENV
          echo "$ANDROID_NDK_BIN" >> $GITHUB_PATH

      - name: Build OpenSSL
        working-directory: openssl
        run: |
          ./Configure ${{ matrix.platform }} -D__ANDROID_API__=${{ inputs.android_sdk_version }} \
                      --prefix=${GITHUB_WORKSPACE}/local \
                      --openssldir=/data/data/dev.sanmer.shell/etc/ssl \
                      no-docs no-tests \
                      no-engine no-legacy no-deprecated

          make -j$(nproc)
          make install || true # /data is read-only

      - name: Build Brotli
        working-directory: brotli
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DBUILD_SHARED_LIBS=ON

          cmake --build build --target install

      - name: Build Zstd
        working-directory: zstd/build/cmake
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DBUILD_SHARED_LIBS=ON \
                -DZSTD_BUILD_STATIC=OFF \
                -DZSTD_PROGRAMS_LINK_SHARED=ON

          cmake --build build --target install

      - name: Build LibSSH2
        working-directory: libssh2
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DBUILD_SHARED_LIBS=ON \
                -DBUILD_STATIC_LIBS=OFF \
                -DCRYPTO_BACKEND=OpenSSL \
                -DCMAKE_FIND_ROOT_PATH=${GITHUB_WORKSPACE}/local \
                -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
                -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY

          cmake --build build --target install

      - name: Build NgHTTP2
        working-directory: nghttp2
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DENABLE_LIB_ONLY=ON \
                -DBUILD_SHARED_LIBS=ON \
                -DBUILD_STATIC_LIBS=OFF

          cmake --build build --target install

      - name: Build NgHTTP3
        working-directory: nghttp3
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DENABLE_LIB_ONLY=ON \
                -DENABLE_SHARED_LIB=ON \
                -DENABLE_STATIC_LIB=OFF

          cmake --build build --target install

      - name: Build NgTCP2
        working-directory: ngtcp2
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DENABLE_LIB_ONLY=ON \
                -DENABLE_SHARED_LIB=ON \
                -DENABLE_STATIC_LIB=OFF \
                -DENABLE_OPENSSL=ON \
                -DCMAKE_FIND_ROOT_PATH=${GITHUB_WORKSPACE}/local \
                -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
                -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY

          cmake --build build --target install

      - name: Build cURL
        working-directory: curl
        run: |
          cmake -S . -B build \
                -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/local \
                -DANDROID_PLATFORM=android-${{ inputs.android_sdk_version }} \
                -DANDROID_ABI=${{ matrix.target }} \
                -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake \
                -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
                -DBUILD_EXAMPLES=OFF \
                -DBUILD_LIBCURL_DOCS=OFF \
                -DBUILD_MISC_DOCS=OFF \
                -DBUILD_SHARED_LIBS=ON \
                -DBUILD_STATIC_CURL=OFF \
                -DBUILD_STATIC_LIBS=OFF \
                -DBUILD_TESTING=OFF \
                -DCURL_LTO=ON \
                -DCURL_ENABLE_SSL=ON \
                -DCURL_DISABLE_LDAP=ON \
                -DCURL_DISABLE_NTLM=ON \
                -DCURL_BROTLI=ON \
                -DCURL_USE_LIBPSL=OFF \
                -DCURL_ZSTD=ON \
                -DCURL_USE_OPENSSL=ON \
                -DCURL_CA_FALLBACK=ON \
                -DUSE_NGHTTP2=ON \
                -DUSE_NGTCP2=ON \
                -DCMAKE_FIND_ROOT_PATH=${GITHUB_WORKSPACE}/local \
                -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
                -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY

          cmake --build build --target install

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-${{ inputs.android_sdk_version }}
          path: local
